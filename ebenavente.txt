
// Pegar en el main.dart — Imagen Filtros Instagram

import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false, // saco la cinta DEBUG
      title: 'Editor mock sin foto',
      theme: ThemeData(
        useMaterial3: true,
        scaffoldBackgroundColor: const Color(0xFFF0F2F5), // fondo gris clarito
      ),
      home: const EditorScreen(),
    );
  }
}

// -------- Pantalla principal del editor --------
class EditorScreen extends StatefulWidget {
  const EditorScreen({super.key});

  @override
  State<EditorScreen> createState() => _EditorScreenState();
}

class _EditorScreenState extends State<EditorScreen> {
  int selectedFilter = 2; // filtro seleccionado
  int selectedTab = 1; // pestaña activa (Natural, Warm, etc.)

  // Lista de filtros (nombre + color + intensidad)
  final List<_Preset> presets = const [
    _Preset('Matte', Colors.black, 0.06),
    _Preset('Bronz', Color(0xFF7A4F2B), 0.10),
    _Preset('Sandi', Color(0xFFB86BD8), 0.14),
    _Preset('Sangri', Color(0xFF1DA1F2), 0.12),
    _Preset('Noir', Colors.black, 0.18),
    _Preset('Fade', Colors.white, 0.08),
  ];

  final List<String> tabs = const ['Natural', 'Warm', 'Cool', 'Vivid', 'Soft'];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // ------------------ BARRA SUPERIOR ------------------
      appBar: AppBar(
        backgroundColor: const Color(0xFF0EA5A5),
        elevation: 0,
        automaticallyImplyLeading: false,
        titleSpacing: 0,
        title: Row(
          children: [
            IconButton(
              onPressed: () {},
              icon: const Icon(Icons.close, color: Colors.white),
            ),
            IconButton(
              onPressed: () {},
              icon: const Icon(Icons.undo, color: Colors.white),
            ),
            IconButton(
              onPressed: () {},
              icon: const Icon(Icons.more_horiz, color: Colors.white),
            ),
            IconButton(
              onPressed: () {},
              icon: const Icon(Icons.tune, color: Colors.white),
            ),
            const Spacer(),
            Padding(
              padding: const EdgeInsets.only(right: 8),
              child: ElevatedButton.icon(
                onPressed: () {},
                icon: const Icon(Icons.save_outlined),
                label: const Text('Guardar'),
                style: ElevatedButton.styleFrom(
                  backgroundColor: const Color(0xFF8B5CF6),
                  foregroundColor: Colors.white,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                  padding: const EdgeInsets.symmetric(
                    horizontal: 14,
                    vertical: 10,
                  ),
                ),
              ),
            ),
          ],
        ),
      ),

      // ------------------ CUERPO ------------------
      body: Column(
        children: [
          // Espacio central donde iría la foto -> ahora solo un fondo blanco
          Expanded(
            child: Center(
              child: AspectRatio(
                aspectRatio: 4 / 3,
                child: Container(
                  color: Colors.white, // fondo liso
                  padding: const EdgeInsets.all(10),
                  child: _TintOverlay(
                    tint: presets[selectedFilter].tint,
                    strength: presets[selectedFilter].strength,
                  ),
                ),
              ),
            ),
          ),

          // Panel inferior de filtros
          Container(
            decoration: const BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(18),
                topRight: Radius.circular(18),
              ),
              boxShadow: [
                BoxShadow(
                  color: Color(0x1A000000),
                  blurRadius: 8,
                  offset: Offset(0, -2),
                ),
              ],
            ),
            padding: const EdgeInsets.fromLTRB(12, 12, 12, 8),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: [
                Row(
                  children: [
                    const Text(
                      'Filtros',
                      style: TextStyle(
                        fontWeight: FontWeight.w800,
                        fontSize: 16,
                      ),
                    ),
                    const Spacer(),
                    IconButton(
                      onPressed: () {},
                      icon: const Icon(Icons.close_rounded),
                    ),
                  ],
                ),

                // Miniaturas
                SizedBox(
                  height: 96,
                  child: ListView.separated(
                    scrollDirection: Axis.horizontal,
                    padding: const EdgeInsets.symmetric(horizontal: 6),
                    itemCount: presets.length,
                    separatorBuilder: (_, __) => const SizedBox(width: 10),
                    itemBuilder: (_, i) {
                      final p = presets[i];
                      final isSelected = i == selectedFilter;
                      return GestureDetector(
                        onTap: () => setState(() => selectedFilter = i),
                        child: Column(
                          children: [
                            Container(
                              width: 78,
                              height: 58,
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(10),
                                border: Border.all(
                                  color: isSelected
                                      ? const Color(0xFF7C3AED)
                                      : const Color(0x33000000),
                                  width: isSelected ? 2.5 : 1,
                                ),
                                color: Colors.grey[300], // miniatura sin imagen
                              ),
                              child: _TintOverlay(
                                tint: p.tint,
                                strength: p.strength,
                              ),
                            ),
                            const SizedBox(height: 6),
                            Text(
                              p.name,
                              style: TextStyle(
                                fontWeight: FontWeight.w700,
                                color: isSelected
                                    ? const Color(0xFF7C3AED)
                                    : Colors.black,
                                fontSize: 12,
                              ),
                            ),
                          ],
                        ),
                      );
                    },
                  ),
                ),

                const SizedBox(height: 6),

                // Tabs de categorías
                SizedBox(
                  height: 38,
                  child: ListView.separated(
                    scrollDirection: Axis.horizontal,
                    padding: const EdgeInsets.symmetric(horizontal: 6),
                    itemCount: tabs.length,
                    separatorBuilder: (_, __) => const SizedBox(width: 6),
                    itemBuilder: (_, i) {
                      final active = i == selectedTab;
                      return GestureDetector(
                        onTap: () => setState(() => selectedTab = i),
                        child: Container(
                          padding: const EdgeInsets.symmetric(horizontal: 12),
                          alignment: Alignment.center,
                          decoration: BoxDecoration(
                            color: active
                                ? const Color(0x22000000)
                                : Colors.transparent,
                            borderRadius: BorderRadius.circular(18),
                          ),
                          child: Text(
                            tabs[i],
                            style: TextStyle(
                              fontWeight: FontWeight.w800,
                              color: Colors.black.withAlpha(active ? 255 : 180),
                            ),
                          ),
                        ),
                      );
                    },
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}

// -------- Overlay de tinte --------
class _TintOverlay extends StatelessWidget {
  final Color tint;
  final double strength;
  const _TintOverlay({this.tint = Colors.transparent, this.strength = 0.0});

  @override
  Widget build(BuildContext context) {
    if (strength <= 0) return const SizedBox.shrink();
    return Container(color: tint.withAlpha((255 * strength).round()));
  }
}

// -------- Modelo de filtro --------
class _Preset {
  final String name;
  final Color tint;
  final double strength;
  const _Preset(this.name, this.tint, this.strength);
}
